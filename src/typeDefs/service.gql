scalar UUID
scalar DateTime

####### Types

type Service {
  id: UUID!
  name: String!
  managers: [Manager!]
  company: Company!
  tickets: [Ticket!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServiceWithoutManagers {
  id: UUID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Manager {
  id: ID!
  email: String!
}

type Query {
  services: [Service!]!
  service(id: UUID!): Service
}

type Mutation {
  createService(data: CreateServiceInput!): Service!
  updateService(id: UUID!, data: UpdateServiceInput!): ServiceResponse!
  deleteService(id: UUID!): ServiceResponse!
  toggleGlobalAccessService(id: UUID!): ServiceResponse!
}

type ServiceResponse {
  message: String!
  success: Boolean!
}

### Input
input CreateServiceInput {
  name: String!
}

input UpdateServiceInput {
  name: String
}