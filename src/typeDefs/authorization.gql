#authorization

scalar DateTime
scalar  UUID

####### Types
type Authorization {
  service: Service!
  manager: Manager!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  getServiceAuthorizations(serviceId: UUID!): [Authorization!]!
  getEmployeeAuthorizations(managerId: UUID!): [Authorization!]!
}

type Mutation {
  addAuthorization(input: NewAuthInput!): AuthorizationResponse!
  updateAuthorization(input: UpdateAuthInput!): AuthorizationResponse!
  deleteAuthorization(input: DeleteAuthInput!): AuthorizationResponse!
}

type AuthorizationResponse {
  message: String!
  success: Boolean!
}

### Input
input NewAuthInput {
  serviceId: UUID!
  managerId: UUID!
}

input UpdateAuthInput {
  serviceId: UUID!
  managerId: UUID!
  isActive: Boolean
}

input DeleteAuthInput {
  serviceId: UUID!
  managerId: UUID!
}
