enum ManagerRole {
  OPERATOR
  ADMIN
  SUPER_ADMIN
}

type Manager {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  role: ManagerRole!
  is_globally_active: Boolean
  created_at: String
  updated_at: String
}

type ManagerWithoutPassword {
  id: ID!
  email: String!
}

type Query {
  managers: [ManagerWithoutPassword!]
}

type Mutation {
  register(infos: InputRegister!): Manager
}

input InputRegister {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  role: ManagerRole = OPERATOR
  is_globally_active: Boolean = FALSE
}
