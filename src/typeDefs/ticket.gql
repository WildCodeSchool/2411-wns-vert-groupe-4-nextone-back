scalar DateTime

type Ticket {
  id: ID
  code: String
  firstName: String
  lastName: String
  email: String
  phone: String
  status: Status
  #service: Service
  createdAt: DateTime
  updatedAt: DateTime
}

type Query {
  getTickets: [Ticket!]
  getTicket(id: ID!): Ticket
}

type Mutation {
  generateTicket(data: GenerateTicketInput!): Ticket!
  deleteTicket(id: ID!): DeletedTicketResponse!
  updateTicket(data: UpdateTicketInput!): Ticket!
  updateTicketStatus(data: UpdateStatusTicketInput!): Ticket!
}

input UpdateStatusTicketInput {
  id: ID!
  status: Status!
}

input GenerateTicketInput {
  code: String
  firstName: String
  lastName: String
  email: String
  phone: String
  #status: Status
  #serviceId: ID!
}

input UpdateTicketInput {
  id: ID!
  code: String
  firstName: String
  lastName: String
  email: String
  phone: String
  status: Status
  #serviceId: ID
}

  type DeletedTicketResponse {
  success: Boolean!
  message: String
}

# enum TicketStatus {
#   PENDING
#   CANCELED
#   DONE
# }

enum Status {
  CREATED
  CANCELED
  DONE
  PENDING
  ARCHIVED
}